package tk.mybatis.springboot.util;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.PrintStream;import java.net.ServerSocket;import java.net.Socket;public class Server {    public static final int port = 1234;    public static void main(String[] args) {        System.out.println("Server...\n");        Server server = new Server();        server.init();    }    public void init() {        try {            ServerSocket serverSocket = new ServerSocket(port);            while (true) {                Socket client = serverSocket.accept();                new HandlerThread(client);            }        } catch (Exception e) {            System.out.println("server error: " + e.getMessage());        }    }    private class HandlerThread implements Runnable {        private Socket socket;        public HandlerThread(Socket client) {            socket = client;            new Thread(this).start();        }        public void run() {            try {                BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));                String clientInputStr = input.readLine();                System.out.println("client msg:" + clientInputStr);                PrintStream out = new PrintStream(socket.getOutputStream());				out.println(clientInputStr+"[server resolved]");                out.close();                input.close();            } catch (Exception e) {                System.out.println("server error: " + e.getMessage());            } finally {                if (socket != null) {                    try {                        socket.close();                    } catch (Exception e) {                        socket = null;                        System.out.println("server error:" + e.getMessage());                    }                }            }        }    }}